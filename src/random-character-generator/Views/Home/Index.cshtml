@model random_character_generator.Models.Character
<h1>
    <strong>@Model.Name</strong>
</h1>
<h2>@Model.Race.ToString() @Model.CharacterClass.ToString()</h2>

<h3>Origin Story</h3>
<h6>
    @{
        Type type = Model.Race.GetType();
        string name = Enum.GetName(type, Model.Race);
        System.Reflection.FieldInfo field = type.GetField(name);
        if (field != null)
        {
            System.ComponentModel.DescriptionAttribute attr =
                   Attribute.GetCustomAttribute(field,
                     typeof(System.ComponentModel.DescriptionAttribute)) as System.ComponentModel.DescriptionAttribute;
            if (attr != null)
            {
        @attr.Description;
            }
        }}

</h6>
<ul>
    @Html.DisplayFor(x => Model.OriginStory.Homeland)
    @Html.DisplayFor(x => Model.OriginStory.Parents)
    <li>Siblings: <b>@Model.OriginStory.Siblings.Element</b>
        <ul>
            @foreach (var sibling in Model.OriginStory.Siblings.SiblingList)
            {
                <li>@sibling.Name who is a @(sibling.IsYounger ? "younger" : "older") <strong>@sibling.Race</strong> @(sibling.Gender).
                    @if (sibling.IsAdopted)
                    {
                        <text>They are an adopted <strong>@sibling.Race</strong></text>
                    }
                </li>
            }
        </ul>
    </li>
    @foreach (var CircumstancesOfBirth in Model.OriginStory.CircumstancesOfBirth)
    {
        @Html.DisplayFor(x => CircumstancesOfBirth)
    }
    @foreach (var MajorChildhoodEvent in Model.OriginStory.ChildhoodEvents)
    {
        @Html.DisplayFor(x => MajorChildhoodEvent)
    }
</ul>
<h3>Adolescence and Training</h3>
<h4>@Model.CharacterClass</h4>
<h6>
    @{
        Type classtype = Model.CharacterClass.GetType();
        string classname = Enum.GetName(classtype, Model.CharacterClass);
        System.Reflection.FieldInfo classfield = classtype.GetField(classname);
        if (classfield != null)
        {
            System.ComponentModel.DescriptionAttribute attr = Attribute.GetCustomAttribute(classfield, typeof(System.ComponentModel.DescriptionAttribute)) as System.ComponentModel.DescriptionAttribute;
            if (attr != null)
            {
        @attr.Description;
            }
        }}

</h6>
<ul>
    @foreach (var Training in Model.AdolescenceAndTraining)
    {
        @Html.DisplayFor(x => Training)
    }
</ul>
<h3>Relationships</h3>

<ul>
    @foreach (var Relationship in Model.Relationships)
    {
        @Html.DisplayFor(x => Relationship)
    }
</ul>
<h3>All unlocked traits and story feats</h3>
<h4>Traits</h4>
<ul>
    @foreach (var trait in Model.AllStoryElements.SelectMany(x => x.UnlockedTraits).Select(x => x.TraitName).Where(x => !String.IsNullOrEmpty(x)).Distinct().OrderBy(x => x))
    {
        <li>@trait</li>
    }
</ul>
<h4>Story Feats</h4>
<ul>
    @foreach (var feat in Model.AllStoryElements.SelectMany(x => x.StoryFeats).Distinct().OrderBy(x => x))
    {
        <li>@feat</li>
    }
</ul>
